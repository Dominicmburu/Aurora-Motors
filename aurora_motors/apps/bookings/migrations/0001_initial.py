# Generated by Django 5.2.4 on 2025-07-07 11:30

import django.db.models.deletion
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='BookingAdditionalDriver',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('license_number', models.CharField(max_length=50)),
                ('license_expiry', models.DateField()),
                ('is_approved', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name': 'Additional Driver',
                'verbose_name_plural': 'Additional Drivers',
            },
        ),
        migrations.CreateModel(
            name='BookingExtension',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('original_end_date', models.DateTimeField()),
                ('new_end_date', models.DateTimeField()),
                ('additional_days', models.PositiveIntegerField()),
                ('additional_amount', models.DecimalField(decimal_places=2, max_digits=8)),
                ('reason', models.TextField()),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('approved', 'Approved'), ('rejected', 'Rejected')], default='pending', max_length=20)),
                ('processed_at', models.DateTimeField(blank=True, null=True)),
                ('processing_notes', models.TextField(blank=True)),
            ],
            options={
                'verbose_name': 'Booking Extension',
                'verbose_name_plural': 'Booking Extensions',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='BookingInvoice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('invoice_number', models.CharField(max_length=20, unique=True)),
                ('invoice_type', models.CharField(choices=[('booking', 'Booking Invoice'), ('extension', 'Extension Invoice'), ('additional_fees', 'Additional Fees'), ('damage', 'Damage Charges')], default='booking', max_length=20)),
                ('issue_date', models.DateField(auto_now_add=True)),
                ('due_date', models.DateField()),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('tax_amount', models.DecimalField(decimal_places=2, default=0, max_digits=8)),
                ('total_amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('description', models.TextField()),
                ('line_items', models.JSONField(default=list)),
                ('is_paid', models.BooleanField(default=False)),
                ('paid_date', models.DateTimeField(blank=True, null=True)),
                ('pdf_file', models.FileField(blank=True, null=True, upload_to='invoices/')),
            ],
            options={
                'verbose_name': 'Booking Invoice',
                'verbose_name_plural': 'Booking Invoices',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='BookingNote',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('content', models.TextField()),
                ('is_important', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name': 'Booking Note',
                'verbose_name_plural': 'Booking Notes',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Booking',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('booking_number', models.CharField(max_length=20, unique=True)),
                ('start_date', models.DateTimeField()),
                ('end_date', models.DateTimeField()),
                ('pickup_location', models.CharField(max_length=200)),
                ('return_location', models.CharField(max_length=200)),
                ('daily_rate', models.DecimalField(decimal_places=2, max_digits=8)),
                ('total_days', models.PositiveIntegerField()),
                ('subtotal', models.DecimalField(decimal_places=2, max_digits=10)),
                ('security_deposit', models.DecimalField(decimal_places=2, max_digits=8)),
                ('additional_fees', models.DecimalField(decimal_places=2, default=0, max_digits=8)),
                ('discount_amount', models.DecimalField(decimal_places=2, default=0, max_digits=8)),
                ('total_amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('confirmed', 'Confirmed'), ('active', 'Active'), ('completed', 'Completed'), ('cancelled', 'Cancelled'), ('no_show', 'No Show')], default='pending', max_length=20)),
                ('confirmation_date', models.DateTimeField(blank=True, null=True)),
                ('pickup_date', models.DateTimeField(blank=True, null=True)),
                ('return_date', models.DateTimeField(blank=True, null=True)),
                ('cancelled_at', models.DateTimeField(blank=True, null=True)),
                ('cancellation_reason', models.CharField(blank=True, choices=[('customer_request', 'Customer Request'), ('vehicle_unavailable', 'Vehicle Unavailable'), ('payment_failed', 'Payment Failed'), ('policy_violation', 'Policy Violation'), ('other', 'Other')], max_length=50, null=True)),
                ('cancellation_notes', models.TextField(blank=True)),
                ('special_requests', models.TextField(blank=True)),
                ('internal_notes', models.TextField(blank=True)),
                ('primary_driver_license', models.CharField(blank=True, max_length=50)),
                ('pickup_mileage', models.PositiveIntegerField(blank=True, null=True)),
                ('return_mileage', models.PositiveIntegerField(blank=True, null=True)),
                ('mileage_limit', models.PositiveIntegerField(default=200, help_text='Daily mileage limit')),
                ('excess_mileage_rate', models.DecimalField(decimal_places=2, default=Decimal('0.25'), help_text='Rate per km over limit', max_digits=5)),
                ('insurance_selected', models.BooleanField(default=False)),
                ('insurance_amount', models.DecimalField(decimal_places=2, default=0, max_digits=8)),
                ('cancelled_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='cancelled_bookings', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bookings', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Booking',
                'verbose_name_plural': 'Bookings',
                'ordering': ['-created_at'],
            },
        ),
    ]
