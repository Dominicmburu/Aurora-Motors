# Generated by Django 5.2.4 on 2025-07-07 11:30

import apps.documents.models
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='DocumentCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True)),
                ('is_required', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('sort_order', models.PositiveIntegerField(default=0)),
                ('allowed_extensions', models.JSONField(default=list, help_text="List of allowed file extensions (e.g., ['pdf', 'jpg', 'png'])")),
                ('max_file_size', models.PositiveIntegerField(default=10485760, help_text='Maximum file size in bytes')),
            ],
            options={
                'verbose_name': 'Document Category',
                'verbose_name_plural': 'Document Categories',
                'ordering': ['sort_order', 'name'],
            },
        ),
        migrations.CreateModel(
            name='DocumentTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=200)),
                ('template_type', models.CharField(choices=[('rental_checklist', 'Rental Checklist'), ('damage_report', 'Damage Report'), ('inspection_form', 'Inspection Form'), ('handover_form', 'Handover Form'), ('incident_report', 'Incident Report')], max_length=50)),
                ('description', models.TextField(blank=True)),
                ('template_content', models.JSONField(default=dict, help_text='Template structure and fields')),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'Document Template',
                'verbose_name_plural': 'Document Templates',
                'ordering': ['template_type', 'name'],
            },
        ),
        migrations.CreateModel(
            name='Document',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('document_type', models.CharField(choices=[('license', 'Driver License'), ('passport', 'Passport'), ('id_card', 'ID Card'), ('insurance', 'Insurance Document'), ('bank_statement', 'Bank Statement'), ('utility_bill', 'Utility Bill'), ('employment_letter', 'Employment Letter'), ('rental_agreement', 'Rental Agreement'), ('damage_report', 'Damage Report'), ('inspection_report', 'Inspection Report'), ('invoice', 'Invoice'), ('receipt', 'Receipt'), ('other', 'Other')], max_length=50)),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('file', models.FileField(upload_to=apps.documents.models.user_document_path)),
                ('file_size', models.PositiveIntegerField(default=0)),
                ('status', models.CharField(choices=[('pending', 'Pending Review'), ('approved', 'Approved'), ('rejected', 'Rejected'), ('expired', 'Expired')], default='pending', max_length=20)),
                ('is_verified', models.BooleanField(default=False)),
                ('verification_date', models.DateTimeField(blank=True, null=True)),
                ('issue_date', models.DateField(blank=True, null=True)),
                ('expiry_date', models.DateField(blank=True, null=True)),
                ('issuing_authority', models.CharField(blank=True, max_length=200)),
                ('document_number', models.CharField(blank=True, max_length=100)),
                ('review_notes', models.TextField(blank=True)),
                ('rejection_reason', models.TextField(blank=True)),
                ('original_filename', models.CharField(blank=True, max_length=255)),
                ('mime_type', models.CharField(blank=True, max_length=100)),
                ('checksum', models.CharField(blank=True, max_length=64)),
                ('is_public', models.BooleanField(default=False)),
                ('is_sensitive', models.BooleanField(default=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='documents', to=settings.AUTH_USER_MODEL)),
                ('verified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='verified_documents', to=settings.AUTH_USER_MODEL)),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='documents', to='documents.documentcategory')),
            ],
            options={
                'verbose_name': 'Document',
                'verbose_name_plural': 'Documents',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='DocumentAuditLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('action', models.CharField(choices=[('uploaded', 'Uploaded'), ('viewed', 'Viewed'), ('downloaded', 'Downloaded'), ('approved', 'Approved'), ('rejected', 'Rejected'), ('deleted', 'Deleted'), ('shared', 'Shared'), ('updated', 'Updated')], max_length=20)),
                ('description', models.TextField(blank=True)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.TextField(blank=True)),
                ('additional_data', models.JSONField(blank=True, default=dict)),
                ('document', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='audit_logs', to='documents.document')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Document Audit Log',
                'verbose_name_plural': 'Document Audit Logs',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='DocumentShare',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('access_type', models.CharField(choices=[('view', 'View Only'), ('download', 'View and Download')], default='view', max_length=20)),
                ('expires_at', models.DateTimeField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('access_count', models.PositiveIntegerField(default=0)),
                ('last_accessed', models.DateTimeField(blank=True, null=True)),
                ('document', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='shares', to='documents.document')),
                ('shared_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='documents_shared', to=settings.AUTH_USER_MODEL)),
                ('shared_with', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='shared_documents', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Document Share',
                'verbose_name_plural': 'Document Shares',
            },
        ),
        migrations.CreateModel(
            name='DocumentVersion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('version_number', models.PositiveIntegerField()),
                ('file', models.FileField(upload_to=apps.documents.models.user_document_path)),
                ('change_notes', models.TextField(blank=True)),
                ('document', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='versions', to='documents.document')),
                ('uploaded_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='uploaded_document_versions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Document Version',
                'verbose_name_plural': 'Document Versions',
                'ordering': ['-version_number'],
            },
        ),
        migrations.AddIndex(
            model_name='document',
            index=models.Index(fields=['user', 'document_type'], name='documents_d_user_id_9276f6_idx'),
        ),
        migrations.AddIndex(
            model_name='document',
            index=models.Index(fields=['status', 'created_at'], name='documents_d_status_64808e_idx'),
        ),
        migrations.AddIndex(
            model_name='document',
            index=models.Index(fields=['expiry_date'], name='documents_d_expiry__1d702a_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='documentshare',
            unique_together={('document', 'shared_with')},
        ),
        migrations.AlterUniqueTogether(
            name='documentversion',
            unique_together={('document', 'version_number')},
        ),
    ]
